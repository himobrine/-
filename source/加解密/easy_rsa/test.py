from Crypto.Util.number import getPrime
from secret import flag

def pow_mod(p, q, n):
    res = 1
    while q:
        if q & 1:
            res = (res * p) % n
        q >>= 1
        p = (p * p) % n
    return res

def gcd(a, b):
    while a != 0:
        a, b = b % a, a
    return b

def mod_1(x, n):
    x0 = x
    y0 = n
    x1 = 0
    y1 = 1
    x2 = 1
    y2 = 0
    while n != 0:
        q = x // n
        (x, n) = (n, x % n)
        (x1, x2) = ((x2 - (q * x1)), x1)
        (y1, y2) = ((y2 - (q * y1)), y1)
    if x2 < 0:
        x2 += y0
    if y2 < 0:
        y2 += x0
    return x2

if __name__ == '__main__':
    p = getPrime(2048)
    q = getPrime(2048)
    n = p * q
    OrLa = (p - 1) * (q - 1)
    while True:
        e = 65537
        if gcd(e, OrLa) == 1:
            break
        else:
            e = e - 1
    d = mod_1(e, OrLa)
    dp = d % (p - 1)
    print('dp: %d' % dp)
    print('d: %d' % d)
    print('n: %d' % n)
    print('e: %d' % e)
    m = ''
    flag = bytes(flag, encoding="utf-8")
    print(flag)
    flag = flag.hex()
    print(flag)
    for i in range(len(flag)):
        m1 = ord(flag[i])
        if len(str(m1)) == 2:
            m1 = '0'+str(m1)
            m = m + str(m1)
    print(m)

    m = int(m)
    C = pow_mod(m, e, n)
    print('c: %d\n' % C)

# dp: 2645986535334497029256327120253449205797419426607632637578159914765214234466799784343316634596665423885458120744538287739618369965561855553174482524906913948223914690206573604802754621855904434041979054382240199709291763955965293089541062877201877503488070636521941879660586338199399691284816428563565063994233653683807484164724704822781157194218823529629486338692290938848555063799401903924366295568914536962291039753955626399968235225352223364693330608399564008679895129546429529837863077289623700100712635326015686310130419969709335928572322768042459117578745377950463794498927098870107346850478510538678591981023
# d: 437939598101177471646631427928984261882877337356797670674238650079913711089665914783428983873045838035947375372700089316946497341180182307846531097333570190531904905663365316275767625635745271312877758596714658308888797675495802152262846947520237589282794902214361154213332177249134423022857727326576721260119758651768729595033243331390524718164987086734105454147566303419964754682108607058658303939623245543746665096424411392070815989944017981444451725952105590126271004487500262755190500705611440163528070175778395713623425848282294111355790619636410221193082297959599468600641902555729647036599748765482348226682894442384583264211757293482661020563042702351790068649955004794465538990180246164443934680289295204103751658608176924761254910161912068813850918852928428034170267349110188315117866988029260561482111901988257680786211014842069814214285024870348334188766472097418090806076380995610223035891260406241717488620199351433580579209891261212134516444543883454555777918941650870687817298344048807595436109983092730305431236490569523251218970727382308209172504347393962374958018588856444300282690897950175116157121439189535854442657634110587509648973395764066745483538038460900022563491216839337690086852636200116203081091920673
# n: 918381141711150261081059896716429078811536287544875494143657315061029850367446405259234139129905448846854061813664589580337981449152873669183991697361774912866039031180723561140566455948094133048511124572919767105773874736303864893538019979509593334469042925458293452056801193535662443416390211052152136862423800805099425043827392429583412852117584753081181017165911072162876939959085875489673917358603885933717048202494773115389257248590845592279695147949671830926194253842867807506301031765764013631036066015294660178028236907042004005373238507587079760217939157858001739846418416990747916224166060887092559059647982471548815411166710725534641155188795825715723587412131103387454972870238788054598786434684504054689924397391949730811939354493020227489576056253115880442185733959257050256430913869732559675002756204335273294664554056350854359217860104893119758414905456980109002228399588605295739181805658639890327530786701451264576286892402053011009964143417250500654462606823469468117683285528000896905399545845970610559833074552321857985762262040802962941558856326649765979876201934843048523497993249158889999998907185646046481865819107045282797451092923302679022433708273842687482920994702734312683903140103134299933485461860047
# e: 65537
# c: 62338032250212250125774557948800444617022870645642351512850554667348324004851119438936891541534287257577934570298772708246187478194029924169193568280396755137969924582015808035714591981356133480564257446864430429059317400272806520428765936669370934565378946751989165904277136681927994022397415734218279975395907292253394084452788018798684089919952968540696454036696913286712445098847121727326140586147259933079930752822980274674016986801095895588918077666890913097471251492711748284536792113980390497569315632167822830314736922799237061612544649839896704275985349323342636623877376059185150713835627972538112300487871679649152993737429083202917952465841189723370345378590755052952951972535370076933913953182503628397879973597538038148313492449268929576179071529977285746929695601880559063224187178264587797698913416446407122458934116736684939492763239257300014881698969792095044732863116233902545291843644452299593415004395858263206883601076590106397340069767975838044155437311099352614068584217869964090125180235692403219089739049975945536660323258987863444131354178879406741957377631957777756194885829276989388716498030359625421387083667710802426555160373485161346194764790634325792727383717039986746135672932246689959189431164028
